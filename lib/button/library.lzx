<library>
    <include href="extensions/drawview.lzx"/>
    <include href="../basepanel.lzx"/>
    <include href="../componentmodel.lzx"/>
    <include href="../componentfocus.lzx"/>
    <include href="../drawshadowfocus.lzx"/>
    <include href="events.lzx"/>
    <include href="mousedownrepeater.lzx"/>
    <include href="keyboardrepeater.lzx"/>
    <include href="style.lzx"/>
    <include href="draw.lzx"/>
    <include href="buttongroup.lzx"/>

    <class name="bsbtn" extends="basepanel" with="componentmodel,buttonevents,stylebutton,drawshadowfocus,drawbutton,componentfocus,applybasecolor"/>

    <class name="btn" extends="bsbtn" height="${this.txt.height + (this.textpadding * 2)}" width="${this.txt.width + (this.textpadding * 2) + 2}">
        <!--- text to display in the button (can leave empty) -->
        <attribute name="text" value="" type="string" />
        <attribute name="textpadding" style="text-padding" value="2" type="number" />
        <attribute name="textcolorup" style="text-color-up" value="black" type="string" />
        <attribute name="textcolorover" style="text-color-over" value="${this.textcolorup}" type="string" />
        <attribute name="textcolordown" style="text-color-down" value="${this.textcolorover}" type="string" />
        <attribute name="textcolordisabled" style="text-color-disabled" value="${this.textcolorup}" type="string" />
        <handler name="ondisabled" args="disabled">
            if (disabled) {
                this.txt.setAttribute('fgcolor', this.textcolordisabled);
            }
        </handler>
        <handler name="oninit">
            if (this.disabled) {
                this.txt.setAttribute('fgcolor', this.textcolordisabled);
            }
        </handler>
        <handler name="onmousestate" args="mousestate">
            var newcolor = this['textcolor' + mousestate];
            if (this.txt.fgcolor != newcolor) {
                this.txt.setAttribute('fgcolor', newcolor);
            }
        </handler>
        <text name="txt" fgcolor="${parent.textcolorup}" text="${classroot.text}" align="center" valign="middle" />  
    </class>
</library>
