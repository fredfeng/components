<class name="scrlstepbtn" height="${this.width}" with="buttonevents,mousedownrepeater,keyboardrepeater,drawborderfocus,componentfocus,drawarrow,virtualdrawview" focusable="true">
    <handler name="oninit" args="ignore=null">
        //this.setAttribute('opacity', .4);
    </handler>
    <handler name="onmouseisover" args="isover">
        //this.animate('opacity', isover ? 1 : .4, 200);
        this.classroot.setAttribute('activated', isover);
    </handler>

    <!-- the amount this button should step by -->
    <attribute name="direction" value="1" type="number"/>
    <!--- @keywords private -->
    <handler name="onmousedown" method="handleMouseDown"/>
    <!--- @keywords private -->
    <handler name="onmousestilldown" method="handleMouseDown"/>
    <!--- @keywords private -->
    <method name="handleMouseDown" args="direction">
        if (direction is this.constructor) direction = this.direction;
        this.classroot.step(direction);
        this.classroot.setAttribute('activated', true);
    </method>

    <!--- @keywords private -->
    <handler name="onkeydown" method="handleKeyDown"/>
    <!--- @keywords private -->
    <handler name="onkeystilldown" method="handleKeyDown"/>
    <!--- @keywords private -->
    <method name="handleKeyDown" args="key">
        if (! this.focused) return;
        if (key == 37 || key == 38) {
            // if left or up
            this.handleMouseDown(-1);
        } else if (key == 39 || key == 40) {
            // if right or down
            this.handleMouseDown(1);
        } else if (key == 13 || key == 32) {
            // enter or space
            this.onmousedown.sendEvent();
        }
    </method>

    <handler name="onopacity" method="redraw"/>

    <method name="drawshape" args="context">
        <![CDATA[
        this.drawarrow(context,1,1,this.width - 2, this.height - 4, this.direction < 0);
        ]]>
    </method>

    <method name="draw" args="context">
        if (! context['interiorbordercolor']) return;
        context.beginPath();

        this.drawshape(context);

        if (this.focused) this.drawfocus(context);

        var globalAlpha = context.globalAlpha;
        context.globalAlpha = this.opacity;

        context.lineWidth = context.borderwidth;
        context.strokeStyle = context.bordercolor;
        context.fillStyle = context.bordercolor;
        context.fill();

        context.globalAlpha = globalAlpha;
    </method>
</class>
