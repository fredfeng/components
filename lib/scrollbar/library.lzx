<library>
    <include href="../basepanel.lzx"/>
    <include href="../componentmodel.lzx"/>
    <include href="../componentfocus.lzx"/>
    <include href="../button/"/>

    <include href="scrollstepbutton.lzx"/>
    <include href="scrollthumb.lzx"/>
    <include href="scrolltrack.lzx"/>
    <include href="basescrollbar.lzx"/>

    <class name="scrlbr" extends="basepanel" with="buttonevents,bsscrlbr">
        <attribute name="size" value="16" style="size"/>
        <attribute name="width" value="${this.size}"/>

        <handler name="oninit" args="isover">
            if (canvas.capabilities['minimize_opacity_changes']) {
                // TODO: handle for IE
            } else {
                this.setAttribute('opacity', .4);
            }
        </handler>
        <handler name="onmouseisover" args="isover">
            this.setAttribute('activated', isover);
        </handler>
        <attribute name="activated" value="false" type="boolean"/>
        <event name="onactivated"/>
        <setter name="activated" args="activated">
            if (activated != this.activated) {
                this.activated = activated;
                if (activated) {
                    this.activate();
                } else {
                    this.deactivate();
                }
            }
            if (this.onactivated.ready) this.onactivated.sendEvent(activated)
        </setter>
        <method name="activateWithTimeout">
            // activate, then deactivate after a little while
            this.setAttribute('activated', true);
            if (! this.__deactivatedel) {
                this.__deactivatedel = new LzDelegate(this, 'deactivate');
            }
            lz.Timer.resetTimer(this.__deactivatedel, 2000);
        </method>
        <method name="activate" args="ignore=null">
            this.activated = true;
            if (canvas.capabilities['minimize_opacity_changes']) {
                // TODO: handle for IE
            } else {
                this.animate('opacity', 1, 200);
            }
        </method>
        <method name="deactivate" args="ignore=null">
            this.activated = false;
            if (! this.isMouseOver()) {
                if (canvas.capabilities['minimize_opacity_changes']) {
                    // TODO: handle for IE
                } else {
                    this.animate('opacity', .4, 200);
                }
            }
        </method>

        <method name="draw" args="context">
            this.beginPath();
            this.drawshape(context,0,0,this.width - 1,this.height - 2);

            this.lineWidth = this.borderwidth;
            this.strokeStyle = this.interiorbordercolor;
            this.fillStyle = this.interiorfillcolor;
            this.fill();
            this.stroke();
        </method>

        <view name="scrolltrack" width="100%" height="100%">
            <scrltrk direction="-1" width="${parent.width}" height="${parent.thumb.y}"/>
            <scrlthmb name="thumb" x="1" width="${parent.width-2}" drawtarget="${classroot}"/>
            <scrltrk direction="1" y="${parent.thumb.y+parent.thumb.height}" width="${parent.width}" height="${parent.height - parent.thumb.y - parent.thumb.height}"/>
        </view>
        <scrlstepbtn direction="-1" x="2" width="${parent.width - 4}"/>
        <scrlstepbtn direction="1" x="2" y="${parent.height - this.height}" width="${parent.width - 4}"/>
    </class>
</library>
