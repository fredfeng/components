<library>
    <include href="extensions/drawview.lzx"/>
    <include href="applybasecolor.lzx"/>
    <include href="drawpanel.lzx"/>
    
    <class name="basepanel" extends="drawpanel" with="applybasecolor">
        <attribute name="borderwidth" style="border-width" type="number" value="0"/>
        <attribute name="bordercolor" style="border-color" type="color" value="void 0"/>
        <attribute name="cornerradius"   style="corner-radius" type="number" value="0"/>
        <attribute name="interiorbordercolor" style="interior-border-color" type="color" value="void 0"/>
        <attribute name="interiorfillcolor" style="interior-fill-color" type="color" value="void 0"/>
        <attribute name="lockredraw" value="false" type="boolean"/>
        <attribute name="scopes" value="null"/>

        <handler name="onwidth" method="redraw"/>
        <handler name="onheight" method="redraw"/>
        <handler name="oncontext" method="redraw"/>

        <method name="redraw" args="ignore=null" >            
            <![CDATA[
            if (! this.context || ! this.isinited || this.lockredraw) return;
            this.clear();
            if (this['draw']) this.draw(this);
            if (! this.scopes) {
                return;
            }
            var l = this.scopes.length;
            if (! l) return;
            for (var i = 0; i < l; i++) {
                var scope = this.scopes[i];
                if (scope) {
                    var x = scope.x;
                    var y = scope.y;
                    this.translate(x, y);
                    this.beginPath();
                    scope.draw(this);
                    this.translate(-x, -y);
                }
            }
            ]]>
        </method>

        <method name="addScope" args="scope">
            <![CDATA[
            if (! this.scopes) {
                this.scopes = [];
            }
            new LzDelegate(this, 'redraw', scope, 'onx');
            new LzDelegate(this, 'redraw', scope, 'ony');
            new LzDelegate(this, 'redraw', scope, 'onwidth');
            new LzDelegate(this, 'redraw', scope, 'onheight');
            this.scopes.push(scope);
            //console.log('addScope', scope, this.scopes);
            ]]>
        </method>
    </class>
</library>
