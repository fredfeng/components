<library>
    <include href="../listitem.lzx"/>

    <class name="combobox" extends="basepanel" x="10" width="100" onclick="this.open();" with="componentmodel,componentfocus,drawshadowfocus">
        <attribute name="opt" value="$once{[]}"/>
        <method name="open">
            if (combobox_floater !== this.opt) {
                combobox_floater.setAttribute('opt', this.opt);
            }
            combobox_floater.show(this);
        </method>
        <method name="draw" args="context">
            if (! context['interiorfillcolor'] || ! context['interiorbordercolor']) return;
            this.drawshape(context,0,0,this.width - 1,this.height - 1);


            context.fillStyle = context.interiorfillcolor;
            context.fill();

            context.lineWidth = context.borderwidth;
            context.strokeStyle = context.interiorbordercolor;
            context.stroke();
        </method>
        <handler name="onkeydown" args="key">
            if (! this.focused) return;
            if (key == 13 || key == 32) {
                // enter or space
                this.open();
            }
        </handler>

        <text text="${this.parent.value}"/>
        <bsbtn align="right" width="${this.height}" height="${this.parent.height}" onclick="this.parent.onclick.sendEvent(this)" with="drawarrow" focusable="false">
            <method name="draw" args="context">
                super.draw(context);
                this.beginPath();
                context.fillStyle = context.bordercolor;
                this.drawarrow(context, 5, 7, this.width - 6, this.height - 8, false);
                this.fill();
            </method>
        </bsbtn>
    </class>

    <fltr name="combobox_floater" width="100" height="200">
        <attribute name="opt" value="$once{[]}"/>
        <setter name="value" args="value">
            if (! this.target) {
                return;
            }
            this.target.setAttribute('value', value);
            this.hide();
        </setter>
        <handler name="ontarget" args="t">
            <![CDATA[
            if (t == null) return;
            lz.Focus.setFocus(this);
            lz.ModeManager.makeModal(this);
            
            if (this.contentstate.applied == false) {
                this.contentstate.setAttribute('applied', true);
            }
            ]]>
        </handler>
        <method name="passModeEvent" args="event_name, view">
            <![CDATA[
            //Debug.write("passModeEvent", event_name, view);
            if (event_name == "onmousedown" && (!view || (view && view !== this.target && ! view.childOf(this.target) ) ) ) {
                this.hide();
            }
            return true;
            ]]>
        </method>
        <state name="contentstate">
            <view name="content" width="100%" height="100%" clip="true">
                <view>
                    <simplelayout/>
                    <selectionmanager name="selector" sel="$lzc$set_selected"/>
                    <replicator nodes="${this.parent.parent.parent.opt}">
                        <listitem controller="$once{this.parent.parent.parent}" selectionmanager="$once{this.parent.selector}"/>
                    </replicator>
                </view>
                <scrlbr/>
            </view>
        </state>
    </fltr>
</library>
